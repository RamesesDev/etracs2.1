import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.io.*;
import imagewebutil.ImageUtil;

public class ETRACSFileTransferService
{
    @Service('Var')
    def var 

	def PACKET_SIZE = 1024
	def THUMBNAIL_SIZE = 240
	
    @ProxyMethod
    public void uploadAttachment( param ) {
        def directory = buildDirectoryPath( param.attachment )
		def filename  = directory + '/' + param.attachment.filename 
        
        def dir = new File(  directory );
        if( ! dir.exists()  ) {
            if( ! dir.mkdirs() ) throw new Exception('Cannot create directory ' + directory + '.' )
        }
        else if( !dir.isDirectory() ) {
            throw new Exception('A file with the name ' + directory + ' already exists.')
        }
        
        def file = new File( filename ) 
        if( param._batch == 0 && file.exists() )  {
            file.delete();
        }
        
        def fos = new FileTransfer.FileOutputHandler(file, true);
        fos.write( param._data );
        fos.close();
    }
	
	@ProxyMethod
	public void uploadComplete( attachment ) {
		//generate Thumbnail
		def directory = buildDirectoryPath( attachment )
		def source = new File( directory + '/' + attachment.filename )
		def target = new File( directory + '/' + buildThumbnailFileName( attachment ) )
		def imgutil = new ImageUtil()
		imgutil.createThumbnail( source, target, 'jpg', THUMBNAIL_SIZE )
	}
	
	@ProxyMethod
    public def downloadAttachment( param ) {
        def directory = buildDirectoryPath( param.attachment )
		def filename  = directory + '/' + param.attachment.filename 
        
        def file = new File( filename );
        if( ! file.exists() )  throw new Exception("File $param.filename no longer exists.")
        
        def fis = new FileTransfer.FileInputSource(file, PACKET_SIZE);
        fis.setPosition( PACKET_SIZE * param._batch)
        def data = fis.read()
        fis.close();
        return data 
    }
	
	def buildDirectoryPath( attachment ) {
		def path = var.faas_attachment_path
        if( ! path ) throw new Exception('FAAS Attachment Path is not set.')
		
        def directory = path + '/' + attachment.directory 
        if( path.endsWith( '/' ) ) {
            directory =    path +  attachment.directory 
        }
		return directory
	}
	
	def getFileName(  filename ) {
		def fname = '' 
		def idx = filename.lastIndexOf( '.' )
		if( idx >= 0 ) {
			fname = filename.substring(0, idx)
		}
		return fname 
	}
	
	def getFileExtension(  filename ) {
		def ext = ''
		int idx = filename.lastIndexOf(".")
		if( idx >= 0 ) {
			ext = '.' + filename.substring(idx+1, filename.length())
		}
        return ext.toLowerCase()
	}

	def buildThumbnailFileName( attachment) {
		def ext = getFileExtension( attachment.filename )
		def targetname = getFileName( attachment.filename ) + '-thumb'
		if( ext ) targetname += ext 
		return targetname 
	}
	
}