<workunit>
    <invokers>
        <invoker folderid="/menu/rpt/landtax" action="init" caption="Notice of Delinquency List Management" target="window" index="20" xpermission="noticeofdelinquencyretting.create" />
        <invoker type="formActions" action="preview" caption="Preview" visibleWhen="#{showPreview==true}" mnemonic="v" icon="images/doc-view.png"  />        
        <invoker type="formActions" action="print" caption="Print" visibleWhen="#{showPreview==true}" mnemonic="p" icon="images/doc-view.png"  />        
        
        <invoker type="previewActions"  action="_default" caption="Back" icon="images/back.png" immediate="true" />
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

class NoticeOfDelinquencyListMgmtController
{
    
    @Service("NoticeOfDelinquencyService")
    def svc
    
    @Service( 'ReportParameterService')
    def paramSvc

    def entity=[:]; 
    def doctype
    def selectedItem
    def list 
    def doctypelist
    
    public void init() {
        doctypelist = svc.getDoctypes()
    }
    
    def listHandler =[
        getRows    : { return 25 },
        getColumns : { return [
            new Column( name:'fdoctype', caption:'Doc Type', maxWidth:350),
            new Column( name:'tdno', caption:'tdno' ),
            new Column( name:'taxpayername', caption:'Taxpayer'),
            new Column( name:'taxpayeraddress', caption:'Taxpayer Address'),
            new Column( name:'receivedby', caption:'Received By'),
            new Column( name:'receiveddate', caption:'Received Date'),
            new Column( name:'assessedvalue', caption:'Assessed Value', type:'decimal' ),
            new Column( name:'delinquentamount', caption:'Delinquent Amount', type:'decimal' ),
            new Column( name:'currentamount', caption:'Current Amount', type:'decimal' ),
            new Column( name:'total', caption:'Total', type:'decimal'),
        ]},
        fetchList  : {
            return list = svc.getList( doctype )
        }
    ] as PageListModel
    
    List getDoctypelist(){
        return doctypelist
    }
    
    void setDoctype( doctype ){
        this.doctype = doctype
        listHandler.load()
    }
    
    void setSelectedItem( selectedItem ){
        this.selectedItem = selectedItem
        reportdata = this.selectedItem
    }
    
    def generateReport(){
        def suffixname = selectedItem.fdoctype.replaceAll(' ', '').toLowerCase()
        reportname = 'demandletters/' + suffixname
        reportdata = svc.populateReportData( reportdata )
        demandlettersreport = demandlettersreport as ServerReportModel
    }
    
    def preview(){
        generateReport()
        report.viewReport()
        return 'preview'
    }
    
    def print(){
        generateReport()
        ReportUtil.print( report.report, true )
    }
    
    def reportdata 
    def reportname
    def demandlettersreport = [
        getReportName : { return reportname }, 
        getReportData : { return reportdata },
        getParameters : { getParameters()   }
    ] 
    
    def getReport(){
        return demandlettersreport 
    }
    
    def getParameters(){
        return paramSvc.getStandardParameter( OsirisContext.env.USERNAME )
    }
    
    def create(){
        return InvokerUtil.lookupOpener('demandletters.create', [:])
    }
    
    boolean getShowPreview() {
        if( selectedItem ) return true
        return false
    }
}
]]>        
        
    </code>
    <pages>
        <page template="etracs2.rpt.report.noticeofdelinquency.ListMgmtPage" />
        <page name="preview" template="etracs2.common.PreviewPage" />
    </pages>
</workunit>