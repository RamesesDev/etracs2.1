<?xml version="1.0" encoding="UTF-8"?>
<!--
    
    @description: CTC-Individual TC Plugin
    
-->
<workunit>
    <invokers>
        <invoker type="collection" caption="CTC-Individual" afid="0016" appcode="ctc_individual" permission="collection_ctc_individual.create"/>
        <invoker type="tc:ctc_individual" action="init" caption="CTC-Individual" afid="0016" permission="collection_ctc_individual.create"/>
        
        <invoker type="initActions" action="back" caption="Back" mnemonic="b"  immediate="true" icon="images/back.png"/>
        
        <invoker type="formActions" action="doNew" caption="New" mnemonic="n" shortcut="ctrl N" visibleWhen="#{mode == 'view' and txnmode != null}" permission="collection_ctc_individual.create"  icon="images/doc-new.png"/>
        <invoker type="formActions" action="_init" caption="Back" mnemonic="b"  immediate="true" visibleWhen="#{mode == 'create'}" icon="images/back.png"/>
        <invoker type="formActions" action="create" caption="Save" mnemonic="s" shortcut="ctrl S" visibleWhen="#{mode == 'create'}" icon="images/save.png"/>
        <invoker type="formActions" action="update" caption="Save" mnemonic="s" shortcut="ctrl S" visibleWhen="#{mode == 'edit'}"  icon="images/save.png"/>
        <invoker type="formActions" action="doPrint" caption="Print" mnemonic="p" shortcut="ctrl P" visibleWhen="#{mode == 'view'}" permission="collection_ctc_individual.print"/>
        <invoker type="formActions" action="doVoid" caption="Void" mnemonic="v" visibleWhen="#{mode == 'view'}" permission="collection_ctc_individual.void" icon="images/void.png"/>
        
        <invoker type="receipt.actions:tc:ctc_individual" action="edit" caption="Edit" mnemonic="e" shortcut="ctrl E" target="popup" permission="collection_ctc_individual.edit" icon="images/edit.png"/>
        <invoker type="receipt.actions:tc:ctc_individual" action="doPrint" caption="Print" mnemonic="p" shortcut="ctrl P" permission="collection_ctc_individual.print"/>
        <invoker type="receipt.actions:tc:ctc_individual" action="doVoid" caption="Void" mnemonic="v" permission="collection_ctc_individual.void" icon="images/doc-void.png"/>
        
        <invoker type="inquiry:tc:ctc_individual" action="initInquiry" caption="Inquiry" />
    </invokers>
    
    <code lang="groovy">
        <![CDATA[
        
        import com.rameses.rcp.common.*
        import com.rameses.rcp.annotations.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.reports.*
        import etracs2.tc.groovy.*
        
        public class CTCIndividualReceiptController extends AbstractCollectionController
        {
            @Service("EntityService")
            def entitySvc;
            
            @Service("CTCService")
            def ctcSvc;
            
            @Service("ReceiptService")
            def svc;
            
            @Service('ReportParameterService')
            def paramsSvc;
        
            def collectiontitle = 'COMMUNITY TAX CERTIFICATE (INDIVIDUAL)'
            def taxpayer
            def taxpayerLookup = InvokerUtil.lookupOpener("entity.lookup", [:])
            def genderList = ['MALE','FEMALE']
            
            def next() {
                if(taxpayer && taxpayer.entitytype != 'individual') {
                    MsgBox.err('Selected taxpayer is not an INDIVIDUAL type.')
                    return;
                }
                
                if( !taxpayer ) {
                    entity.info.payer = [
                        entitytype : 'individual',
                        info:[:]
                    ]
                }
                entity.doctype = 'CTCI'
                entity.tax = [
                    basic:    0.00,
                    business: 0.00,
                    property: 0.00,
                    salary:   0.00,
                    interest: 0.00,
                ]
                entity.annualsalary = 0.00
                entity.businessgross = 0.00
                entity.propertyincome = 0.00
                return 'new'
            }
            
            void setTaxpayer( tp ) {
                this.taxpayer = tp
                if( !entity.info.payer ) entity.info.payer = [:]
                
                if( !tp ) {
                    entity.info.payer = [info:[:]]
                }
                else {
                    tp = entitySvc.open( tp.objid, tp.entitytype );
                    if( !tp ) throw new Exception("Taxpayer record cannot be opened.");
                    
                    entity.info.payer.clear();
                    entity.info.payer.putAll( tp );
                }
            }
            
            void calculate() {
                def result = ctcSvc.calculate( entity );
                entity.tax = result.tax;
                entity.info.amount = result.total;
                entity.items = result.items;
            }
            
            def getService() { return svc }
            def getHtmlService() {}
            def getCollectionTitle() { return collectiontitle }

            def getParameters() { 
                return paramsSvc.getStandardParameter( OsirisContext.env.USERNAME )
            }
            
            def getReportName() { return 'AF0016' }
        }
        
        
        ]]>
    </code>
    
    <pages>
        <page name="init" template="etracs2.ctc.tc.ui.CTCInitPage"/>
        <page name="new" template="etracs2.ctc.tc.ui.IndividualPage"/>
        <page name="view" template="etracs2.tc.collection.CollectionViewPage"/>
        <page name="html" template="etracs2.tc.HtmlPage"/>
    </pages>
</workunit>
