<workunit>
    <invokers>
        <invoker folderid="/menu/tc/coll" action="init" caption="Issued Receipt" permission="receipt.viewissued" index="35"/>
        <invoker folderid="/txn/tc/coll" action="init" caption="Issued Receipt" permission="receipt.viewissued" index="35"/>
        
        <invoker type="quick_launcher" code="ISSUEDRCT" action="init" caption="Issued Receipt" permission="receipt.viewissued" />
        
        <invoker type="home.action" action="init" caption="Issued Receipts" permission="receipt.viewissued" index="104" icon="images/folder.png" target="window"/>
        
        <invoker type="formActions" action="_close" immediate="true" caption="Close" icon="images/cancel.png" index="-10"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;

class IssuedReceiptController 
{
    @Service("ReceiptService")
    def svc;
    
    @Service('ETRACSUserService')
    def userService
    
    def searchText
    def selectedItem
    def collector 
    def formActions
    
    def docstateList = ['OPEN', 'CLOSED']
    def docstate = docstateList[0];
    
    void init() {
        collector = userService.getCollector( OsirisContext.env.USERID )
    }
    
    void setDocstate( d ) {
        this.docstate = d
        listHandler.load()
    }
    
    void setSelectedItem( item ) {
        selectedItem = item 
        formActions = null
        if( item ) {
            formActions = InvokerUtil.lookupActions('receipt.actions:' + item.opener, [entity:selectedItem])
        }
    }
    
    def listHandler = [
        getRows    : { return 25 },
        getColumns : {
            return [
                new Column(name:'mode', caption:'Mode'),
                new Column(name:'afid', caption:'AF No.'),
                new Column(name:'stubno', caption:'Stub No.'),
                new Column(name:'txndate', caption:'Txn Date'),
                new Column(name:'serialno', caption:'Serial No.'),
                new Column(name:'collectiontype', caption:'Collection Type'),
                new Column(name:'payorname', caption:'Payor'),
                new Column(name:'paidby', caption:'Paid By'),
                new Column(name:'amount', caption:'Amount', type:'decimal'),
                new Column(name:'voidreason', caption:'Voided'),
            ]
        }, 
        fetchList : { 
            def searchParam = [ 
                collectorid:collector.objid, 
                docstate : docstate,
                searchText:searchText 
            ]
            return svc.getList( searchParam, it ) 
        },
    ] as PageListModel
    
    void search() {
        listHandler.load()
    }
    
}

]]>        
        
    </code>
    <pages>
        <page template="etracs2.tc.collection.IssuedReceiptPage"/>
    </pages>
</workunit>
