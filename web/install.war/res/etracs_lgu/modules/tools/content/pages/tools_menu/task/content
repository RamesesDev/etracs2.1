<script type="text/javascript">
	
	\$register({id:"scheduler:info", context:"taskinfo", page: "${PAGE.path}/info"});
	
	\$put(
		"tasklist",
		new function()
		{
			var session ;
			var svc = Service.lookup("tools/TaskSchedulerService");
			
			var self = this;
			this.task;
			this.tasklist = [];
			
			this.listModel = {
				rows: 15,
				fetchList: function(o) {
					if(o==null) o = {}
					self.tasklist = svc.getActiveTasks(o);
					return self.tasklist;
				}
			}
			
			this.onload = function() {
				/*
				session = new Notifier( svc.getSessionId(), window.location.href );
				session.handler = function(o) {
					var z = self.tasklist.find(
						function(x) {return o.id==x.id}
					) 
					if(z) {
						z.status = o.status;
						if(!z.status || z.status == 'proceed' || z.status == 'resumed') z.status = 'active';
						if( o.currentdate ) z.currentdate = o.currentdate;
						self.listModel.refresh(false);
					}
				}
				session.connect();
				*/
			}
			
			this.suspend = function() {
				if(this.task) svc.suspend({id: this.task.id});
			}

			this.resume = function() {
				if(this.task) svc.resume({id:this.task.id});
			}

			this.resumeError = function() {
				if(this.task) svc.resumeError({id:this.task.id});
			}

			this.addTask = function() {
				var saveHandler = function(o) {
					o.suspended = "true";
					svc.create( o );
					self.listModel.refresh(true);
				}
				return new PopupOpener("scheduler:info", {saveHandler: saveHandler});
			}

			this.editTask = function() {
				var saveHandler = function(o) {
					svc.update( o );
					self.listModel.refresh(true);
				}
				return new PopupOpener("scheduler:info", {saveHandler: saveHandler, task: this.task, mode: 'edit'});
			}
			
			this.remove = function() {
				if(this.task && confirm('Are you sure you want to delete this record?')) {
					svc.remove( this.task );
					this.listModel.refresh(true);
				}
			}

		}
	);
</script>

<div>
	<button r:context="tasklist" r:name="addTask">Add Task</button>
</div>

<%
def cols = [
	[name:"id", caption:"Id"],
	[name:"description", caption:"Description"],
	[name:"status", caption:"Status"],
	[name:"service", caption:"Service"],
	[name:"method", caption:"Method"],
	[name:"currentdate", caption:"Current Date"],
	[html: """
		<nobr>
			<a r:context="tasklist" r:name="suspend" r:visibleWhen="#{item.status == 'active'}">Suspend</a>
			<span r:context="tasklist" r:visibleWhen="#{item.status == 'suspended'}">
				<a r:context="tasklist" r:name="editTask">Edit</a>|
				<a r:context="tasklist" r:name="resume">Resume</a>|
				<a r:context="tasklist" r:name="remove">Delete</a>
			</span>
			
			<a r:context="tasklist" r:name="recover" r:visibleWhen="#{item.status == 'error'}">Recover</a>
		</nobr>
	"""],
];
%>

@grid( context:'tasklist', model:'listModel', name:'task', cols:cols )